/*
 * Marlowe Runtime REST API
 *
 * REST API for Marlowe Runtime
 *
 * The version of the OpenAPI document: 0.0.5.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SafetyError : Information about the safety of a Marlowe contract and its state.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SafetyError {
    #[serde(rename = "account-id", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<Box<crate::models::Party>>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<Box<crate::models::PlutusPeriodAddress>>,
    #[serde(rename = "bytes", skip_serializing_if = "Option::is_none")]
    pub bytes: Option<i32>,
    #[serde(rename = "choice-id", skip_serializing_if = "Option::is_none")]
    pub choice_id: Option<Box<crate::models::ChoiceId>>,
    #[serde(rename = "cost", skip_serializing_if = "Option::is_none")]
    pub cost: Option<Box<crate::models::ExBudget>>,
    #[serde(rename = "currency-symbol", skip_serializing_if = "Option::is_none")]
    pub currency_symbol: Option<String>,
    #[serde(rename = "detail")]
    pub detail: String,
    #[serde(rename = "error")]
    pub error: String,
    #[serde(rename = "fatal")]
    pub fatal: bool,
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<String>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "role-name", skip_serializing_if = "Option::is_none")]
    pub role_name: Option<String>,
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<Box<crate::models::Token>>,
    #[serde(rename = "token-name", skip_serializing_if = "Option::is_none")]
    pub token_name: Option<String>,
    #[serde(rename = "transaction", skip_serializing_if = "Option::is_none")]
    pub transaction: Option<Box<crate::models::Transaction>>,
    #[serde(rename = "value-id", skip_serializing_if = "Option::is_none")]
    pub value_id: Option<String>,
    #[serde(rename = "warning", skip_serializing_if = "Option::is_none")]
    pub warning: Option<Box<crate::models::TransactionWarning>>,
}

impl SafetyError {
    /// Information about the safety of a Marlowe contract and its state.
    pub fn new(detail: String, error: String, fatal: bool) -> SafetyError {
        SafetyError {
            account_id: None,
            address: None,
            bytes: None,
            choice_id: None,
            cost: None,
            currency_symbol: None,
            detail,
            error,
            fatal,
            hash: None,
            message: None,
            role_name: None,
            token: None,
            token_name: None,
            transaction: None,
            value_id: None,
            warning: None,
        }
    }
}


