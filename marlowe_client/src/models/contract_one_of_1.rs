/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ContractOneOf1 : If an observation is true, the first contract applies, otherwise the second contract applies.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContractOneOf1 {
    #[serde(rename = "else")]
    pub r#else: Box<crate::models::Contract>,
    #[serde(rename = "if")]
    pub r#if: Box<crate::models::Observation>,
    #[serde(rename = "then")]
    pub then: Box<crate::models::Contract>,
}

impl ContractOneOf1 {
    /// If an observation is true, the first contract applies, otherwise the second contract applies.
    pub fn new(r#else: crate::models::Contract, r#if: crate::models::Observation, then: crate::models::Contract) -> ContractOneOf1 {
        ContractOneOf1 {
            r#else: Box::new(r#else),
            r#if: Box::new(r#if),
            then: Box::new(then),
        }
    }
}


