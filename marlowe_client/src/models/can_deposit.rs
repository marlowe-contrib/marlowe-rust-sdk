/*
 * Marlowe Runtime REST API
 *
 * REST API for Marlowe Runtime
 *
 * The version of the OpenAPI document: 0.0.5.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CanDeposit : Deposit Input that can be applied for a given contract



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CanDeposit {
    #[serde(rename = "can_deposit")]
    pub can_deposit: i32,
    /// Index of a \"Case Action\" in a \"When\"
    #[serde(rename = "case_index")]
    pub case_index: i32,
    #[serde(rename = "into_account")]
    pub into_account: Box<crate::models::Party>,
    /// Indicates if a given contract continuation is merkleized
    #[serde(rename = "is_merkleized_continuation")]
    pub is_merkleized_continuation: bool,
    #[serde(rename = "of_token")]
    pub of_token: Box<crate::models::Token>,
    #[serde(rename = "party")]
    pub party: Box<crate::models::Party>,
}

impl CanDeposit {
    /// Deposit Input that can be applied for a given contract
    pub fn new(can_deposit: i32, case_index: i32, into_account: crate::models::Party, is_merkleized_continuation: bool, of_token: crate::models::Token, party: crate::models::Party) -> CanDeposit {
        CanDeposit {
            can_deposit,
            case_index,
            into_account: Box::new(into_account),
            is_merkleized_continuation,
            of_token: Box::new(of_token),
            party: Box::new(party),
        }
    }
}


