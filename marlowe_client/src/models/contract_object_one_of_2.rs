/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ContractObjectOneOf2 : Wait for an action to be performed and apply the matching contract when it does. Apply the timeout contract if no actions have been performed in the timeout period.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContractObjectOneOf2 {
    #[serde(rename = "timeout")]
    pub timeout: i32,
    #[serde(rename = "timeout_continuation")]
    pub timeout_continuation: Box<crate::models::ContractObject>,
    #[serde(rename = "when")]
    pub when: Vec<crate::models::CaseObject>,
}

impl ContractObjectOneOf2 {
    /// Wait for an action to be performed and apply the matching contract when it does. Apply the timeout contract if no actions have been performed in the timeout period.
    pub fn new(timeout: i32, timeout_continuation: crate::models::ContractObject, when: Vec<crate::models::CaseObject>) -> ContractObjectOneOf2 {
        ContractObjectOneOf2 {
            timeout,
            timeout_continuation: Box::new(timeout_continuation),
            when,
        }
    }
}


